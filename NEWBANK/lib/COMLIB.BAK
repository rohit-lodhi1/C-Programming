//#include "NEWBANK\includes\mydef.h"
//line designe
void newLine(int n)
{
	int i;
	for (i = 0; i < n; ++i)
	{
		printf("\n");
	}
}
//line designe
void lineDesigne()
{
	int i;
  printf("\033[1;33m");
	newLine(1);
	for(i=0;i<=79;i++)
	{
		printf("_");
	}
}

// Repeat Holder name check

int isHolder(char *holder)
{
 struct netBanking *tmp1;
	tmp1=temp;
	temp=start;
	while(temp!=NULL)
	{
	   if(strcmp(temp->Info.accountHolderName,holder)==0)
     	{
	       temp=tmp1;
	     	return true;
	    }
	   else
		 temp=temp->nb;
	}
	temp=tmp1;
	return false;
 

}

//Same username check

int isRepeat(char *username)
{
	struct netBanking *tmp;
	tmp=temp;
	temp=start;
	while(temp!=NULL)
	{
	   if(strcmp(temp->userName,username)==0)
     	{
	       temp=tmp;
	     	return true;
	    }
	   else
		 temp=temp->nb;
	}
	temp=tmp;
	return false;

}
// Auto generate Account No

void autoAccountNo()
{
 
  random+=1;
  temp->Info.accountNo=random;
}

//view the data in 
void viewData()
{
  newLine(1);
  temp=start;
  while(temp!=NULL)
  {
    printf("%s\n",temp->userName);
    printf("%s\n",temp->passWord);
    printf("%s\n",temp->Info.mobileNo);
 temp=temp->nb;
 getch();
  }
}
/* logout */
void logOut()
{
  clrscr();
   newLine(10);
  printf("\033[1;36m");
  printf("%43.20s","Loging Out....");
  printf("\033[0m");
  delay(1500);
}

// view the balance of given account no

int  viewBal(int accNo)
{
	struct netBanking *tmp3;
  int flag=0;
  tmp3=temp;
  temp=start;
while(temp!=NULL)
	{
	   if(temp->Info.accountNo==accNo)
     	{
	       flag=1;
	       printf("Your balance is %d",temp->Info.accountBalance);
	        temp=tmp3;
	       break;
	    }
	   else
		 temp=temp->nb;
	}
	temp=tmp3;
   if(flag==0)
  {
      printf("Wrong account NO");
       delay(800);
       return 1;
  }

}

// Account No check
void deposit(int accNo)
{
struct netBanking *tmp4;
  int flag=0,amount;
  tmp4=temp;
  temp=start;
while(temp!=NULL)
	{
	   if(temp->Info.accountNo==accNo)
     	{
	       flag=1;
	        newLine(2);
         printf("\033[1;37m");
         printf("%30.30s","Entre Amount :-");
         scanf("%d",&amount);
	       temp->Info.accountBalance+=amount;
	       record->crAmt=amount;
      record=(struct mini*)malloc(sizeof(struct mini));
  if(st==NULL)
    st=record;
  else
    cur->next=record;
  cur=record;
  record=NULL;
          printf("%50.30s","Deposited Successfully");
          delay(800);
	      	        temp=tmp4;
	        break;
	    }
	   else
		 temp=temp->nb;
	}
	temp=tmp4;
   if(flag==0)
  {
      printf("Wrong account NO");
       delay(800);   
  }
}
// withdrawl amount
int withDra(int accNo)
{
    struct netBanking *tmp5;
  int flag=0,amount=0;
  tmp5=temp;
  temp=start;
while(temp!=NULL)
	{
	   if(temp->Info.accountNo==accNo)
     	{
	       flag=1;
	        newLine(2);
         printf("\033[1;37m");
         printf("%30.30s","Entre Amount :-");
         scanf("%d",&amount);
         if(temp->Info.accountBalance>=amount)
         {
	            temp->Info.accountBalance-=amount;
	            printf("%50.30s","Withdrawal Successfully");
                delay(800);
                record->drAmt=amount;
      record=(struct mini*)malloc(sizeof(struct mini));
  if(st==NULL)
    st=record;
  else
    cur->next=record;
  cur=record;
  record=NULL;
	            	  temp=tmp5;
	                break;
	       }
	     else{
              printf("%30.30s","Not Suffiecient Balance");
              	temp=tmp5;
              break;
	         }
	    }
	   else
		 temp=temp->nb;
	}
	//temp=tmp5;
   if(flag==0)
  {
      printf("Wrong account NO");
       delay(800);    
  }
}

// pending list

void viewPendingData()
{
     struct netBanking *tmp6;
	  int i=1;
 clrscr();
 newLine(2);
  printf("\033[1;36m");
  printf("%53.25s","Registration Pending List");
  newLine(2);
      lineDesigne();
  printf("%6.5s","Press");
  printf("%35.20s","Name");
  printf("%35.20s","Status");
  printf("\n\n");
    printf("\033[1;37m");
     tmp6=temp;
     while(temp!=NULL)
     {
	  if(temp->status==pending)
	  {
		  printf("   %d",temp->Info.accountNo);
	    printf("%25.20s",temp->userName);
	    printf("%44d",temp->status);
	  }
	  newLine(1);
	  temp=temp->nb;
     }
     temp=tmp6;
     getch();
}

//active User

void activeUser()
{
	 struct netBanking *tmp7;
	 int accNo,flag=0;
	 tmp7=temp;
	 clrscr();
 newLine(2);
  printf("\033[1;36m");
  printf("%53.25s","Registration Pending List");
  newLine(2);
      lineDesigne();
         printf("\033[1;37m");
         newLine(3);
         printf("%30.30s","Entre AccNo :-");
         scanf("%d",&accNo);
         temp=start;
  while(temp!=NULL)
	{
	   if(temp->Info.accountNo==accNo)
     	{
          flag=1;
           temp->status=active;
               printf("%50.30s","User activated");
           temp=tmp7;
           break;
      }
      temp=temp->nb;
   }	    
   temp=tmp7;
   if(flag==0)
  {
      printf("Wrong account NO");
       delay(800);    
  }
  getch();
}

// user transfer Money-> quick Transfer

void qk()
{
	struct netBanking *store,*send,*rec;
  int flag=0,jhan=0,sender,receiver,amount;
  store=temp;
  send=start;
  clrscr();
 newLine(2);
  printf("\033[1;36m");
  printf("%53.25s","Quick Transfer Money");
  newLine(2);
  lineDesigne();
  printf("%35.30s","Entre your Account No");
  scanf("%d",&sender);
while(send!=NULL)
	{
	   if(send->Info.accountNo==sender)
     	{
	       flag=1; 
          printf("Entre your Account No");
           scanf("%d",&receiver);
           rec=start;
          while(rec!=NULL)
	        {
	            if(rec->Info.accountNo==receiver)
     	        {
	              jhan=1;
	              newLine(2);
                printf("\033[1;37m");
                 printf("%30.30s","Entre Amount :-");
                scanf("%d",&amount);
                send->Info.accountBalance-=amount;
                rec->Info.accountBalance+=amount;
                 printf("%30.30s","SuccesFully");
                 delay(1000);
                return true;
              }
              rec=rec->nb;
           }
           if(jhan==0)
           {
              	printf("Wrong AccountNo");            
           }
       }
       send=send->nb;
   }
   if(flag==0)
   {
          printf("Wrong AccountNo");   
   }
}
/*methods*//*
void printPendingData(struct netBanking *userList){
	while(usesrList!=NULL){
		if (userList->status==pending)
		{
		printf("\n------------------------------------------------------\n");
		printf("user Account Number %ld",userList->bank.accountNumber);
		printf("\nuser status %d",userList->status);
		printf("\n------------------------------------------------------");
		}
		userList=userList->nb;
	}	
}
void printActiveData(struct netBanking *userList){
	while(userList!=NULL){
		if (userList->status==active)
		{
		printf("\n------------------------------------------------------\n");
		printf("user Account Number %ld",userList->bank.accountNumber);
		printf("\nuser status %d",userList->status);
		printf("\n------------------------------------------------------");
		}
		userList=userList->nb;
	}	
}
int varifieduserList(struct netBanking *userList){
	int account;
	printf("\nEnter Account Number For Activation");
	scanf("%ld",&account);
	while(userList!=NULL)
	{
		if (userList->bank.accountNumber==account)
		{
			userList->status=active;
			return true;
		}
		userList=userList->nb;
	}
	return false;
}

*/